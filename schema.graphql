type User @entity {
  "Address to HexString"
  id: ID!
  "Owner's address"
  address: Bytes!
  "First trade block timestamp"
  firstTradeTimestamp: BigInt!
  "List of orders placed by this user"
  ordersPlaced: [Order!]! @derivedFrom(field: "owner")
  "Determine if user has solved a settlement"
  isSolver: Boolean!
}

type Token @entity {
  "Token address to hexString"
  id: ID!
  "Token address"
  address: Bytes!
  "First token trade block timestamp"
  firstTradeTimestamp: BigInt!
  "Token name fetched by ERC20 contract call"
  name: String!
  "Token symbol fetched by contract call"
  symbol: String!
  "Token decimals fetched by contract call"
  decimals: Int!
  "Total volume managed in CowSwap"
  totalVolume: BigInt!
  "Estimated token price in USD"
  priceUsd: BigDecimal
  "Estimated token price in ETH"
  priceEth: BigDecimal
}

type Order @entity {
  "Trade's OrderUid to hex string"
  id: ID!
  "Trader's account"
  owner: User
  "Block's timestamp on trade event"
  tradesTimestamp: BigInt
  "Block's timestamp on invalidate event"
  invalidateTimestamp: BigInt
  "Block's timestamp on presign event"
  presignTimestamp: BigInt
  "Boolean value for is presigned"
  isSigned: Boolean
  "Array of trades on the order"
  trades: [Trade!] @derivedFrom(field: "order")
  "Boolean value true by default unless is invalidated by the event"
  isValid: Boolean!
}

type Trade @entity {
  "This Id is composed using orderId|txHashString|eventIndex"
  id: ID!
  "Block's timestamp"
  timestamp: BigInt!
  "Transaction's gas price"
  gasPrice: BigInt!
  "Transaction's gas limit"
  gasLimit: BigInt!
  "Trade's fee amount"
  feeAmount: BigInt! 
  "Trade event transaction hash"
  txHash: Bytes!
  "Settlement"
  settlement: Settlement!
  "Trade event buyAmount"
  buyAmount: BigInt!
  "Trade event sellAmount"
  sellAmount: BigInt!
  "Trade event sellToken"
  sellToken: Token!
  "Trade event buyToken"
  buyToken: Token!
  "Order"
  order: Order!
}

type Settlement @entity {
  "TxHash"
  id: ID!
  "Solver user"
  solver: User!
  "Transaction hash"
  txHash: Bytes!
  "First trade timestamp"
  firstTradeTimestamp: BigInt!
  "Collection of trades"
  trades: [Trade!] @derivedFrom(field: "settlement")
}